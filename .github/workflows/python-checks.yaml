name: Python checks 🐍

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/**
      - film-catalog/**

jobs:
  run-lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install "black==25.1.0"

      - name: Black 🖤
        run: black --check --diff ./

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run ruff check --diff
        uses: astral-sh/ruff-action@v3
        with:
          version-file: 'pyproject.toml'
          args: 'check --diff'

      - name: Run ruff check
        uses: astral-sh/ruff-action@v3
        with:
          version-file: 'pyproject.toml'

      - name: Run mypy
        run: uv run mypy film-catalog

  run-tests:
    runs-on: ubuntu-latest
    needs:
      - run-lints

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: run python tests
        run: uv run pytest film-catalog --cov=film-catalog --cov-report=xml
        env:
          TESTING: 1
          REDIS_PORT: 6379

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          dry_run: ${{ env.ACT }}
          fail_ci_if_error: 'true'
